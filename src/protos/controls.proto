syntax = "proto3";

/*************************************************/
/******** Main messages that will be sent ********/
/*************************************************/

message controlConfig {
    // The main firing trigger that requests a dart out the barrel, ASAP
    int32 triggerSwitchPin = 0;
    SwitchOriencation TriggerSwitchOrientation = 1;
    // An optional switch that requests the flywheels rev up to full (or idle? partial?) speed
    int32 optRevSwitchPin = 2;
    SwitchOriencation optRevSwitchOrientation = 3;
    // Which button is this?
    int32 buttonPin = 4;
    // This is internally routed on Detlaff; you probably don't want to touch it
    // Is there any reason a user should want to touch this?
    int32 batteryAdcPin = 5;

    // In case we want to read the availability of darts in a mag
    // Or is this too pie-in-the-sky?
    MagControlInputType magDataType = 6;
    int32 magDataPin = 7;
}

/*************************************************/
/************** Enums and sub-types **************/
/*************************************************/

enum SwitchOriencation {
    SWITCH_NORMALLY_OPEN = 0;
    SWITCH_NORMALLY_CLOSED = 1;
}

// This may be a bit pie-in-the-sky for the moment, we may want to remove
enum MagControlInputType {
    MAG_CONTROL_UNSPECIFIED = 0;
    // This might be as simple as an ir gate near the front of the mag to tell you if there's a dart ready to be pushed
    //  into the cage, or something like QWK's fancy magnet in the mag
    MAG_HAS_DARTS = 1;
    MAG_NUM_DARTS_LEFT = 2;
}